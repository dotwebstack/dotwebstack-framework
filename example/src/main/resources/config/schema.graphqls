schema {
  query: Query
}

type Query {
  brewery(identifier: ID!): Brewery
    @sparql(
      repository: "local",
      subject: "https://github.com/dotwebstack/beer/id/brewery/${identifier}")

  breweries(sort: [SortField!] = [{ field: "name", order: ASC }],
            page: Int = 1 @constraint(min: 1), pageSize: Int = 10 @constraint(oneOfInt: [10, 20, 50])): [Brewery!]!
    @sparql(
      repository: "local",
      limit: "pageSize",
      offset: "(page - 1) * pageSize",
      orderBy: "sort"
    )

  breweries_paging_input(input: PageQueryInput): [Brewery!]!
    @sparql(
      repository: "local",
      limit: "input.pageSize",
      offset: "(input.page - 1) * input.pageSize"
    )

  breweries_sort_input(input: PageQueryInput): [Brewery!]!
    @sparql(
      repository: "local",
      orderBy: "input.sort"
    )
}

type Brewery {
  identifier: ID!
  name: String!
  founded: String!
  openinghours: String
  owners: [String]
  url: String!
    @transform(expr: "url.getLocalName()")
  postalCode: String!
  beers: [String]
  ingredients: [String]
}

input SortQueryInput {
  sort: [SortField!] = [{ field: "name", order: ASC }]
}

input PageQueryInput {
  page: Int = 1 @constraint(min: 1)
  pageSize: Int = 10 @constraint(oneOfInt: [10, 20, 50])
}
