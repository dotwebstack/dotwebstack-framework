schema {
  query: Query
}

type Query {
  pand(identificatiecode: ID!): Pand
    @sparql(
      repository: "local",
      subject: "http://bag.basisregistraties.overheid.nl/bag/id/pand/${identificatiecode}")
  panden(sort: [SortField!] = [{ field: "identificatiecode", order: DESC }],
         page: Int = 1, pageSize: Int = 10): [Pand!]!
    @sparql(
      repository: "local",
      limit: "pageSize",
      offset: "(page - 1) * pageSize",
      orderBy: "sort"
    )
  panden_paging_input(input: CollectionQueryInput): [Pand!]!
    @sparql(
      repository: "local",
      limit: "input.pageSize",
      offset: "(input.page - 1) * input.pageSize"
    )
  panden_sort_input(input: QueryInput): [Pand!]!
    @sparql(
      repository: "local"
      orderBy: "input.sort")
    )
}

type Pand {
  identificatiecode: ID!
  status: String!
    @transform(expr: "status.getLocalName()")
  oorspronkelijkBouwjaar: Int!
  beginGeldigheid: DateTime!
  eindGeldigheid: DateTime
}

type Verblijfsobject {
  identificatiecode: ID!
  status: String!
}

enum SortOrder {
  ASC
  DESC
}

input SortField {
  field: String!
  order: SortOrder!
}

input SortQueryInput {
  sort: [SortField!] = [{ field: "identificatiecode", order: DESC }]
}

input CollectionQueryInput {
  page: Int = 1
  pageSize: Int = 10
}

input PageQueryInput {
  page: Int = 1
  pageSize: Int = 10
}
