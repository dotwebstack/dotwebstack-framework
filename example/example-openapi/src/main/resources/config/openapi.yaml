openapi: 3.0.2

info:
  title: Breweries
  version: 3.0.0

paths:
  /breweries:
    get:
      x-dws-query:
        field: breweryCollection
        paging:
          pageSize: $query.pageSize
          page: $query.page
        filters:
          breweries:
            type: GeoFilter
            fields:
              geometry:
                contains:
                  fromGeoJson: $post._geo
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: ['address', 'beers','beers.class', 'beers.ingredients', 'founded', 'hasBeers', 'postalCode','countries','class']
        - name: name
          in: query
          explode: false
          required: false
          schema:
            type: array
            items:
              type: string
        #        - name: foundedAfter
        #          in: query
        #          required: false
        #          schema:
        #            type: string
        #        - name: foundedBefore
        #          in: query
        #          required: false
        #          schema:
        #            type: string
        #        - name: sort
        #          in: header
        #          x-dws-type: sort
        #          required: true
        #          schema:
        #            type: array
        #            default: ['name']
        #            items:
        #              type: string
        #              enum: ['-address.subject', '-beers.name', 'identifier', 'name', '-postalCode', 'subject', '-subject', 'beerCount']
        - name: page
          in: query
          required: false
          schema:
            type: string
            default: 1
        - name: pageSize
          in: query
          schema:
            type: string
            default: 10
      #        - name: withAddressSubject
      #          in: query
      #          schema:
      #            type: string
      #        - name: searchName
      #          in: query
      #          explode: false
      #          required: false
      #          schema:
      #            type: array
      #            items:
      #              type: string
      #        - name: searchPostalCode
      #          in: query
      #          schema:
      #            type: string
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BreweryCollection'
            application/stream+json:
              schema:
                $ref: '#/components/schemas/BreweryCollection'
    #          headers:
    #            X-Pagination-Limit:
    #              schema:
    #                type: integer
    #                x-dws-expr: args.pageSize
    #            X-Pagination-Page:
    #              schema:
    #                type: integer
    #                x-dws-expr: args.page
    post:
      x-dws-query:
        field: breweries
        filters:
          breweries:
            type: BreweryFilter
            fields:
              geometry:
                contains:
                  fromGeoJSON:
                    x-dws-expr: "json:asString($body._geo.contains)!"
                  Content-CRS: $header.content-crs
                intersects:
                  fromGeoJSON:
                    x-dws-expr: "json:asString($body._geo.intersects)!"
                  Content-CRS: $header.content-crs
                within:
                  fromGeoJSON:
                    x-dws-expr: "json:asString($body._geo.within)!"
                  Content-CRS: $header.content-crs
      parameters:
        - name: content-crs
          in: header
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/GeoBody'
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BreweryCollection'
  /brewery/{identifier}:
    get:
      x-dws-query:
        field: brewery
        keys:
          identifier: $path.identifier
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: ['postalCode', 'beers', 'beers.ingredients']
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Brewery'
  /brewery_post:
    post:
      x-dws-query: brewery
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: ['postalCode', 'beers', 'beers.ingredients']
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
              properties:
                identifier:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Brewery'

components:
  schemas:
    Beer:
      type: object
      required:
        - identifier
        - name
      properties:
        identifier:
          type: string
        name:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
#        link:
#          type: string
#          x-dws-expr: '`${env.dotwebstack.base_url}/beers/${fields.identifier}`'
#        class:
#          type: string
#          x-dws-default: 'Beer'
    BreweryCollection:
      type: object
      x-dws-envelope: true
      required:
        - _embedded
        - _links
      properties:
        _embedded:
          x-dws-envelope: true
          type: object
          required:
            - breweries
          properties:
            breweries:
              type: array
              items:
                $ref: '#/components/schemas/Brewery'
        _links:
          x-dws-envelope: true
          type: object
          required:
            - self
          properties:
            self:
              x-dws-envelope: true
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  x-dws-expr: '`${env.dotwebstack.base_url}/breweries`'
    Brewery:
      type: object
      required:
        - identifier
        - name
      properties:
        identifier:
          type: string
        name:
          type: string
        postalAddress:
          $ref: '#/components/schemas/Address'
        visitAddress:
          $ref: '#/components/schemas/Address'
        beers:
          type: array
          items:
            $ref: '#/components/schemas/Beer'
#        hasBeers:
#          type: boolean
#        link:
#          type: string
#          x-dws-expr: '`${env.dotwebstack.base_url}/brewery/${fields.identifier}`'
#        class:
#          type: string
#          x-dws-default: 'Brewery'
    Ingredient:
      type: object
      required:
        - name
      properties:
        identifier:
          type: string
        name:
          type: string
    Address:
      type: object
      required:
        - identifier
        - street
        - city
      properties:
        identifier:
          type: string
        street:
          type: string
        city:
          type: string
    GeoBody:
      type: object
      description: Geo body
      properties:
        _geo:
          $ref: '#/components/schemas/Geo'
    Geo:
      type: object
      description: Geo body content
      oneOf:
        - $ref: '#/components/schemas/Intersects'
        - $ref: '#/components/schemas/Contains'
        - $ref: '#/components/schemas/Within'
    Intersects:
      type: object
      description: >-
        'overlapt' en 'raakt' vallen hieronder
      properties:
        intersects:
          $ref: '#/components/schemas/GeoJSONGeometry'
    Contains:
      type: object
      description: Omsluit volledig
      properties:
        contains:
          $ref: '#/components/schemas/GeoJSONGeometry'
    Within:
      type: object
      description: Valt volledig binnen
      properties:
        within:
          $ref: '#/components/schemas/GeoJSONGeometry'
    GeoJSONGeometry:
      x-dws-type: geometry
      title: GeoJSONGeometry
      type: object
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/Point'
        - $ref: '#/components/schemas/MultiPoint'
        - $ref: '#/components/schemas/LineString'
        - $ref: '#/components/schemas/MultiLineString'
        - $ref: '#/components/schemas/Polygon'
        - $ref: '#/components/schemas/MultiPolygon'
      example:
        type: Polygon
        coordinates:
          - - - 5.955381012
              - 52.179015422
            - - 5.955381012
              - 52.183396603
            - - 5.96179731
              - 52.183396603
            - - 5.96179731
              - 52.179015422
            - - 5.955381012
              - 52.179015422
  requestBodies:
    GeoBody:
      x-dws-type: geometry
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeoBody'
