schema {
    query: Query
}

type Query {
    begrippen: SparqlQueryResult!
    @sparql(
        repository: "brk",
        queryRef: "begrippenlijst"
    )
    @mlQuery(
        select: "ml:collectionQuery('http://brk.basisregistraties.overheid.nl/id/begrippenkader/brk')"
        construct: "ml:collectionQuery('http://brk.basisregistraties.overheid.nl/id/begrippenkader/brk')"
    )

    model: Model
    @sparql(repository: "brk", queryRef: "model")
    @mlQuery(
        select: "ml:collectionQuery('http://brk.basisregistraties.overheid.nl/def/brk')"
        construct: "ml:collectionQuery('http://brk.basisregistraties.overheid.nl/def/brk')"
    )

    begrippenkader: Model
    @sparql(repository: "brk", queryRef: "begrippenkader")
    @mlQuery(
        select: "ml:collectionQuery('http://brk.basisregistraties.overheid.nl/id/begrippenkader/brk')"
        construct: "ml:collectionQuery('http://brk.basisregistraties.overheid.nl/id/begrippenkader/brk')"
    )

    begrip(
        identifier: String
    ): Model
    @sparql(repository: "brk",
        queryRef: "begrip",
        subject: "http://brk.basisregistraties.overheid.nl/id/begrip/${identifier}")
    @mlQuery(
        select: "ml:orQuery(ml:collectionQuery('http://brk.basisregistraties.overheid.nl/id/begrippenkader/brk'),ml:collectionQuery('http://brk.basisregistraties.overheid.nl/def/brk'))"
        construct: "ml:orQuery(ml:collectionQuery('http://brk.basisregistraties.overheid.nl/id/begrippenkader/brk'),ml:collectionQuery('http://brk.basisregistraties.overheid.nl/def/brk'))"
    )

    begripVersion(
        identifier: String
        version: String
    ): Model
    @sparql(repository: "brk",
        queryRef: "begrip",
        subject: "http://brk.basisregistraties.overheid.nl/id/begrip/${identifier}/${version}")
    @mlQuery(
        select: "ml:orQuery(ml:collectionQuery('http://brk.basisregistraties.overheid.nl/id/begrippenkader/brk'),ml:collectionQuery('http://brk.basisregistraties.overheid.nl/def/brk'))"
        construct: "ml:orQuery(ml:collectionQuery('http://brk.basisregistraties.overheid.nl/id/begrippenkader/brk'),ml:collectionQuery('http://brk.basisregistraties.overheid.nl/def/brk'))"
    )

    informationResourceBegrip(
        type: String
        identifier: String
    ): IRI
    @sparql(repository: "brk",
        queryRef: "informationResourceBegrip",
        subject: "http://brk.basisregistraties.overheid.nl/id/${type}/${identifier}")
    @mlQuery(
        select: "ml:orQuery(ml:versionQuery(mlBasePath + 'waardelijsten/'),ml:versionQuery(mlBasePath + 'dkk/'),ml:versionQuery(mlBasePath + 'brk/'))"
        construct: "ml:orQuery(ml:versionQuery(mlBasePath + 'waardelijsten/'),ml:versionQuery(mlBasePath + 'dkk/'),ml:versionQuery(mlBasePath + 'brk/'))"
    )
    informationResourceDescriptionBegrip(
        type: String
        identifier: String
        version: String
    ): Model
    @sparql(repository: "brk",
        queryRef: "informationResourceDescriptionBegrip",
        subject: "http://brk.basisregistraties.overheid.nl/doc/${version}/${type}/${identifier}")
    @mlQuery(
        select: "ml:orQuery(ml:versionQuery(mlBasePath + 'waardelijsten/'),ml:versionQuery(mlBasePath + 'dkk/'),ml:versionQuery(mlBasePath + 'brk/'))"
        construct: "ml:orQuery(ml:versionQuery(mlBasePath + 'waardelijsten/'),ml:versionQuery(mlBasePath + 'dkk/'),ml:versionQuery(mlBasePath + 'brk/'))"
    )

    informationResource(
        type: String
        identifier: String
    ): IRI
    @sparql(repository: "brk",
        queryRef: "informationResource",
        subject: "http://brk.basisregistraties.overheid.nl/brk/id/${type}/${identifier}")
    @mlQuery(
        select: "ml:orQuery(ml:versionQuery(mlBasePath + 'waardelijsten/'),ml:versionQuery(mlBasePath + 'dkk/'),ml:versionQuery(mlBasePath + 'brk/'))"
        construct: "ml:orQuery(ml:versionQuery(mlBasePath + 'waardelijsten/'),ml:versionQuery(mlBasePath + 'dkk/'),ml:versionQuery(mlBasePath + 'brk/'))"
    )

    informationResourceDescription(
        type: String
        identifier: String
        version: String
    ): Model
    @sparql(repository: "brk",
        queryRef: "informationResourceDescription",
        subject: "http://brk.basisregistraties.overheid.nl/brk/doc/${version}/${type}/${identifier}")
    @mlQuery(
        select: "ml:orQuery(ml:versionQuery(mlBasePath + 'waardelijsten/'),ml:versionQuery(mlBasePath + 'dkk/'),ml:versionQuery(mlBasePath + 'brk/'))"
        construct: "ml:orQuery(ml:versionQuery(mlBasePath + 'waardelijsten/'),ml:versionQuery(mlBasePath + 'dkk/'),ml:versionQuery(mlBasePath + 'brk/'))"
    )
}

