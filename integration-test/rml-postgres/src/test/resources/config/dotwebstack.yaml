features:
  - paging

queries:
  beer:
    type: Beer
    keys:
      - field: identifier
    nullable: true

objectTypes:
  Beer:
    table: db.beer
    backend: postgres
    keys:
      - field: identifier
    fields:
      identifier:
        type: ID
      name:
        type: String
      abv:
        type: Float
      soldPerYear:
        type: Int
      retired:
        type: Boolean
      brewery:
        type: Brewery
        joinColumns:
          - name: brewery
            referencedField: identifier
      ingredients:
        type: Ingredient
        list: true
        joinTable:
          name: db.beer_ingredient
          joinColumns:
            - name: beer_identifier
              referencedField: identifier
          inverseJoinColumns:
            - name: ingredient_code
              referencedColumn: code
      ingredient:
        type: Ingredient
        nullable: true
        joinTable:
          name: db.beer_ingredient
          joinColumns:
            - name: beer_identifier
              referencedField: identifier
          inverseJoinColumns:
            - name: ingredient_code
              referencedColumn: code
      ingredientAgg:
        aggregationOf: Ingredient
        joinTable:
          name: db.beer_ingredient
          joinColumns:
            - name: beer_identifier
              referencedField: identifier
          inverseJoinColumns:
            - name: ingredient_code
              referencedColumn: code
      taste:
        type: Taste
        list: true
      since:
        type: Date
      lastBrewed:
        type: DateTime
    filters:
      name: {}
      sinceDate:
        field: since
      lastBrewed: {}
      breweryCity:
        field: brewery.visitAddress.city
      breweryPostalAdressCity:
        field: brewery.postalAddress.city
      breweryHistoryAge:
        field: brewery.history.age
    sortableBy:
      name:
        - field: name
          direction: ASC
      nameDesc:
        - field: name
          direction: DESC
      breweryCity:
        - field: brewery.visitAddress.city
          direction: ASC

  Ingredient:
    backend: postgres
    table: db.ingredient
    keys:
      - field: identifier
    fields:
      identifier:
        type: ID
      name:
        type: String
      code:
        type: String
      weight:
        type: Float
      partOf:
        type: Beer
        list: true
        nullable: true
        joinTable:
          name: db.beer_ingredient
          joinColumns:
            - name: ingredient_code
              referencedColumn: code
          inverseJoinColumns:
            - name: beer_identifier
              referencedField: identifier

  Brewery:
    backend: postgres
    table: db.brewery
    keys:
      - field: identifier
    fields:
      identifier:
        type: ID
      name:
        type: String
      status:
        type: String
      geometry:
        type: Geometry
      postalAddress:
        type: Address
        nullable: true
        joinColumns:
          - name: postal_address
            referencedField: identifier
      visitAddress:
        type: Address
        nullable: true
        joinColumns:
          - name: visit_address
            referencedField: identifier
      beers:
        type: Beer
        list: true
        nullable: true
        mappedBy: brewery
      beer:
        type: Beer
        nullable: true
        mappedBy: brewery
      beerAgg:
        aggregationOf: Beer
        mappedBy: brewery
      history:
        type: History
      multinational:
        type: Boolean
    filters:
      name: {}
      multinational:
        field: multinational
      geometry: {}
      historyAge:
        field: history.age
    sortableBy:
      name:
        - field: name
          direction: ASC

  Address:
    backend: postgres
    table: db.address
    keys:
      - field: identifier
    fields:
      identifier:
        type: ID
      street:
        type: String
      city:
        type: String

  History:
    backend: postgres
    keys:
      - field: identifier
    fields:
      age:
        type: Int
        column: his_age
      history:
        type: String
        column: his_history

enumerations:
  Taste:
    values: [MEATY, FRUITY, SMOKY, SPICY, WATERY]

rml:
  namespaces:
    beer: http://dotwebstack.org/def/beer#
    foaf: http://xmlns.com/foaf/0.1/
    gsp: http://www.opengis.net/ont/geosparql#
