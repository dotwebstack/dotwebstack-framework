openapi: 3.0.2

info:
  title: Breweries
  version: 3.0.0

components:
  schemas:
    Beer:
      type: object
      required:
        - identifier
        - name
      properties:
        identifier:
          type: string
        name:
          type: string
          nullable: true
#        ingredients:
#          type: array
#          items:
#            $ref: '#/components/schemas/Ingredient'
#        link:
#          type: string
#          x-dws-expr: '`${env.dotwebstack.base_url}/beers/${fields.identifier}`'
#        class:
#          type: string
#          x-dws-default: 'Beer'
    BreweryCollection:
      type: object
      x-dws-envelope: true
      required:
        - _embedded
        - _links
      properties:
        _embedded:
          x-dws-envelope: true
          type: object
          required:
            - breweries
          properties:
            breweries:
              type: array
              items:
               $ref: '#/components/schemas/Brewery'
#        _links:
#          x-dws-envelope: true
#          type: object
#          required:
#            - self
#          properties:
#            self:
#              x-dws-envelope: true
#              type: object
#              required:
#                - href
#              properties:
#                href:
#                  type: string
#                  x-dws-expr: '`${env.dotwebstack.base_url}/breweries`'
    Brewery:
      type: object
      required:
        - identifier_brewery
        - name
      properties:
        identifier_brewery:
          type: string
        name:
          type: string
          nullable: true
        postalAddress:
          $ref: '#/components/schemas/Address'
        visitAddress:
          $ref: '#/components/schemas/Address'
#        beers:
#          type: array
#          items:
#            $ref: '#/components/schemas/Beer'
#        hasBeers:
#          type: boolean
#        postalCode:
#          type: string
#          nullable: true
#        founded:
#          type: string
#        link:
#          type: string
#          x-dws-expr: '`${env.dotwebstack.base_url}/brewery/${fields.identifier_brewery}`'
#        countries:
#          type: array
#          x-dws-default: ['Netherlands','Belgium']
#          items:
#            type: string
#        class:
#          type: string
#          x-dws-default: 'Brewery'
    Ingredient:
      type: object
      required:
        - name
      properties:
        identifier:
          type: string
        name:
          type: string
          nullable: true
    Address:
      type: object
      nullable: true
      required:
        - identifier_address
        - street
        - city
      properties:
        identifier_address:
          type: string
        street:
          type: string
        city:
          type: string

paths:
  /breweries:
    get:
      x-dws-query:
        field: breweries
        filters:
          breweries:
            type: BreweryFilter
            fields:
              name:
                in: $query.name
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: ['address', 'beers','beers.class', 'beers.ingredients', 'founded', 'hasBeers', 'postalCode','countries','class']
        - name: name
          in: query
          explode: false
          required: false
          schema:
            type: array
            items:
              type: string
#        - name: foundedAfter
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: foundedBefore
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: sort
#          in: header
#          x-dws-type: sort
#          required: true
#          schema:
#            type: array
#            default: ['name']
#            items:
#              type: string
#              enum: ['-address.subject', '-beers.name', 'identifier', 'name', '-postalCode', 'subject', '-subject', 'beerCount']
#        - name: page
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: pageSize
#          in: query
#          schema:
#            type: string
#        - name: withAddressSubject
#          in: query
#          schema:
#            type: string
#        - name: searchName
#          in: query
#          explode: false
#          required: false
#          schema:
#            type: array
#            items:
#              type: string
#        - name: searchPostalCode
#          in: query
#          schema:
#            type: string
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BreweryCollection'
            application/stream+json:
              schema:
                $ref: '#/components/schemas/BreweryCollection'
#          headers:
#            X-Pagination-Limit:
#              schema:
#                type: integer
#                x-dws-expr: args.pageSize
#            X-Pagination-Page:
#              schema:
#                type: integer
#                x-dws-expr: args.page
  /brewery/{identifier_brewery}:
    get:
      x-dws-query:
        field: brewery
#        keys:
#          identifier_brewery: $path.identifier
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: ['postalCode', 'beers', 'beers.ingredients']
        - name: identifier_brewery
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Brewery'
  /brewery_post:
    post:
      x-dws-query: brewery
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: ['postalCode', 'beers', 'beers.ingredients']
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
              properties:
                identifier:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Brewery'
