openapi: 3.0.2

info:
  title: Breweries
  version: 3.0.0

components:
  schemas:
    Beer:
      type: object
      required:
        - identifier
        - name
      properties:
        identifier:
          type: string
        brewery:
          $ref: '#/components/schemas/Brewery'
        name:
          type: string
          nullable: true
        link:
          type: string
          x-dws-expr: '`${env.dotwebstack.base_url}/beers/${fields.identifier}`'
    BreweryCollection:
      type: object
      x-dws-envelope: true
      required:
        - _embedded
        - _links
      properties:
        _embedded:
          x-dws-envelope: true
          type: object
          required:
            - breweries
          properties:
            breweries:
              type: array
              items:
                $ref: '#/components/schemas/Brewery'
        _links:
          x-dws-envelope: true
          type: object
          required:
            - self
          properties:
            self:
              x-dws-envelope: true
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  x-dws-expr: '`${env.dotwebstack.base_url}/breweries`'
    Brewery:
      type: object
      required:
        - identifier
        - name
        - founded
        - localName
        - owners
        - sponsorship
        - beerCount
      properties:
        identifier:
          type: string
        founded:
          type: string
        name:
          type: string
          nullable: true
        localName:
          type: string
          nullable: true
        owners:
          type: array
          items:
            type: string
        beerCount:
          type: integer
        link:
          type: string
          x-dws-expr: '`${env.dotwebstack.base_url}/brewery/${fields.identifier}`'
    BeerCollection:
      type: object
      x-dws-envelope: true
      required:
        - _embedded
        - _links
      properties:
        _embedded:
          x-dws-envelope: true
          type: object
          required:
            - beers
          properties:
            beers:
              type: array
              items:
                $ref: '#/components/schemas/Beer'
        _links:
          x-dws-envelope: true
          type: object
          required:
            - self
          properties:
            self:
              x-dws-envelope: true
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  x-dws-expr: '`${env.dotwebstack.base_url}/beers`'

    Ingredient:
      type: object
      required:
        - name
      properties:
        identifier:
          type: string
        name:
          type: string
          nullable: true
    SortField:
      type: array
      items:
        type: object
        properties:
          field:
            type: string
          order:
            type: string
    BadRequest:
      type: object
      properties:
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
    NotAcceptable:
      type: object
      properties:
        status:
          type: integer
          format: int32
        acceptable:
          type: array
          x-dws-expr: "acceptableMimeTypes"
        customparam:
          type: string
          x-dws-expr: "`foo`"

paths:
  /brewery/{identifier}:
    get:
      x-dws-query:
        field: brewery
        selector: identifier
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Brewery'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Brewery'
  /beer/{identifier}:
    get:
      x-dws-query:
        field: beer
        selector: identifier
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [ 'brewery' ]
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Beer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Beer'
  /beers/{country}/{name}:
    get:
      x-dws-query:
        field: beers_by_country_and_name
        selector: country
        requiredFields:
          - name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: country
          in: path
          required: true
          schema:
            type: string
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [ 'brewery' ]
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              x-dws-default: true
              schema:
                $ref: '#/components/schemas/BeerCollection'
            application/stream+json:
              schema:
                $ref: '#/components/schemas/BeerCollection'
        400:
          description: bad request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /beers:
    get:
      x-dws-query:
        field: beers
        requiredFields:
          - name
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [ 'brewery' ]
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              x-dws-default: true
              schema:
                $ref: '#/components/schemas/BeerCollection'
            application/stream+json:
              schema:
                $ref: '#/components/schemas/BeerCollection'
        400:
          description: bad request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        406:
          description: not acceptable
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/NotAcceptable"
  /breweries:
    get:
      x-dws-query: breweries
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [ 'beers' ]
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BreweryCollection'
            application/stream+json:
              schema:
                $ref: '#/components/schemas/BreweryCollection'
        400:
          description: error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/BadRequest"
