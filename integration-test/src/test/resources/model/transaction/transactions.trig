GRAPH dbeerpedia:Theatre {

  # Transaction: replace resource from graph
  dbeerpedia:InsertConcept a elmo:Transaction;
    elmo:sequentialFlow (
      dbeerpedia:PreUpdateStep
      dbeerpedia:AssertIfNotExists
      dbeerpedia:AssertIfExists
      dbeerpedia:PersistenceStep
      dbeerpedia:PostUpdateStep
    );
  .
  dbeerpedia:PreUpdateStep a elmo:UpdateStep;
    elmo:backend elmo:TransactionRepository;
    elmo:query """
      INSERT DATA
        {
        <http://dbeerpedia.org#davo> <http://www.w3.org/2000/01/rdf-schema#label>
        \"Davo brouwerij Deventer\"
        };
    """
  .
  dbeerpedia:AssertIfNotExists a elmo:AssertionStep;
  	rdfs:label "Davo should exists";
  	elmo:assert """
  	  ASK  { ?s <http://www.w3.org/2000/01/rdf-schema#label> \"Davo brouwerij Deventer\"
  	  }
  	"""
  .
  dbeerpedia:AssertIfExists a elmo:AssertionStep;
  	rdfs:label "Brouwtoren should not exists";
  	elmo:assertNot """
  	  ASK  { ?s <http://www.w3.org/2000/01/rdf-schema#label> \"Brouwtoren\"
  	  }
  	"""
  .
  dbeerpedia:PersistenceStep a elmo:PersistenceStep;
    elmo:persistenceStrategy elmo-sp:InsertIntoGraph;
    elmo:backend dbeerpedia:Backend;
    elmo:targetGraph <http://dotwebstack.org/all-concepts>;
  .
  dbeerpedia:PostUpdateStep a elmo:UpdateStep;
    elmo:backend dbeerpedia:Backend;
    elmo:query """
      INSERT DATA
        {
        <http://dbeerpedia.org#davo> <http://www.w3.org/2000/01/rdf-schema#label>
        \"Davo brouwerij Deventer\"
        };
    """
  .
}
