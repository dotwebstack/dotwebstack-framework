schema {
  query: Query
}

directive @key(
  field: String
) on ARGUMENT_DEFINITION

type Query {
  brewery(identifier: ID! @constraint(pattern: "[0-9]+") @key): Brewery

  breweries(sort: [SortField!] = [{ field: "name", order: ASC }] @sort,
            page: Int = 1 @constraint(min: 1), pageSize: Int = 10 @constraint(oneOfInt: [1, 2, 5, 10]),
            foundedAfter: Date ,
            foundedBefore: Date,
            name: [String] @key,
            searchName: [String],
            searchPostalCode: [String],
            withAddressSubject: String): [Brewery!]!
}

type Brewery {
  identifier: ID!
  name: String!
  founded: String
  address: Address
  postalCode: String
  beers(name: [SortField!] = [{order: ASC}], ingredient: String @filter(field: "ingredients.name")): [Beer!]
  hasBeers: Boolean
}

type Address {
  subject: String!
  postalCode: String
  streetAddress: String!
}

type Beer {
  identifier: ID!
  name: String!
  ingredients(name: [String]): [Ingredient!]
}

type Ingredient {
  identifier: ID
  name: String
}
