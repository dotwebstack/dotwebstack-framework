CREATE SCHEMA db;

CREATE EXTENSION IF NOT EXISTS postgis;

CREATE TYPE db.brewery_status AS ENUM ('active', 'inactive');

CREATE TYPE db.taste AS ENUM ('MEATY', 'SMOKY', 'WATERY', 'FRUITY', 'SPICY');

CREATE TABLE IF NOT EXISTS public.tiles_10km AS
SELECT x || '_' || y                                      AS tile_id,
-- Maak rechthoek polygoon
       ST_MakeEnvelope(x, y, x + 10000, y + 10000, 28992) AS geom_rd
-- van linksonder: x = (-41171,606), y = (306846,073) in stappen van 10km (10000)
FROM generate_series(-41200, 306000, 10000) x
-- van rechtsboven x = (278026,057), y = (866614,784) in stappen van 10km (10000)
         CROSS JOIN generate_series(280000, 870000, 10000) y;

CREATE INDEX IF NOT EXISTS tiles_10km_sdx1 ON public.tiles_10km USING GIST (geom_rd);

CREATE TABLE db.address (
  identifier_address character varying NOT NULL PRIMARY KEY,
  street character varying NOT NULL,
  street_tsv TSVECTOR NOT NULL,
  city character varying NOT NULL
);

CREATE TABLE db.brewery (
  identifier_brewery character varying NOT NULL PRIMARY KEY,
  name character varying NOT NULL,
  status db.brewery_status NOT NULL,
  postal_address character varying REFERENCES db.address (identifier_address) NOT NULL,
  visit_address character varying REFERENCES db.address (identifier_address),
  geometry geometry(GeometryZ, 7415) NOT NULL,
  geometry_bbox geometry(Geometry, 7415) NOT NULL,
  geometry_etrs89 geography(GeometryZ, 7931) NOT NULL,
  his_age INT,
  his_history character varying,
  multinational boolean,
  created timestamp NOT NULL
);

CREATE TABLE db.beer (
  identifier_beer character varying NOT NULL PRIMARY KEY,
  name character varying NOT NULL,
  abv NUMERIC(3,1) NOT NULL,
  brewery character varying NOT NULL REFERENCES db.brewery (identifier_brewery),
  sold_per_year INT NOT NULL,
  taste db.taste[] NULL,
  since date NOT NULL,
  last_brewed timestamp NOT NULL,
  predecessor character varying REFERENCES db.beer (identifier_beer)
);

CREATE TABLE db.ingredient (
  identifier_ingredient character varying NOT NULL PRIMARY KEY,
  name character varying NOT NULL,
  code character varying(4) NOT NULL UNIQUE,
  weight NUMERIC(3,1) NOT NULL
);

CREATE TABLE db.beer_ingredient (
  beer_identifier character varying NOT NULL REFERENCES db.beer (identifier_beer),
  ingredient_code character varying(4) NOT NULL REFERENCES db.ingredient (code),
  PRIMARY KEY (beer_identifier,ingredient_code)
);

CREATE TABLE db.room
(
    record_id bigint generated by default as identity not null PRIMARY KEY,
    name character varying NOT NULL,
    brewery character varying NOT NULL REFERENCES db.brewery (identifier_brewery),
    geometry geometry(Geometry, 28992) null
);

--geometry segment tabellen
CREATE TABLE db.room__geometry__segments (room__record_id bigint, geometry geometry, tile_id varchar);

--geometry segment tabellen foreign keys
ALTER TABLE db.room__geometry__segments add constraint "room__fkey" foreign key ("room__record_id") references db.room (record_id) on delete cascade on update restrict deferrable initially deferred;

--geometry segment tabellen indexes
create index "2645953359__geom__121638587__idx" on db.room__geometry__segments using gist(geometry);
create index "2645953359__1730614750__idx" on db.room__geometry__segments(room__record_id, tile_id);
