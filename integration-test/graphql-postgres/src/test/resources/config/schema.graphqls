schema {
  query: Query
}

type Query {
  beers: [Beer!]!
  beer(identifier: ID!): Beer
  brewery(identifier: ID!): Brewery
  breweries: [Brewery!]!
}

type Brewery {
  identifier: ID!
  name: String!
  status: String!
  beers: [Beer]
  postalAddress: Address
  visitAddress: Address
  geometry(type: GeometryType): Geometry
  beerAgg: Aggregate!
}

type Beer {
  identifier: ID!
  name: String!
  abv: Float!
  brewery: Brewery!
  ingredients: [Ingredient!]!
  soldPerYear: Int!
  ingredientAgg: Aggregate!
}

type Address {
  identifier: ID!
  street: String!
  city: String!
}

type Ingredient {
  identifier: ID!
  name: String!
  weight: Float!
}

type Aggregate {
  count(field: String!, distinct: Boolean = false): Int!

  intSum(field: String!): Int
  intMin(field: String!): Int
  intMax(field: String!): Int
  intAvg(field: String!): Int

  floatSum(field: String!): Float
  floatMin(field: String!): Float
  floatMax(field: String!): Float
  floatAvg(field: String!): Float
}