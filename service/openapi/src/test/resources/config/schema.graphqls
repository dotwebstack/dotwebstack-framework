schema {
  query: Query
}

type Query {
    query1(argument1: String, argument2: String): Object1!

    query2: Object2!

    query3(query3_param1: [String], query3_param2: String, query3_param3: String, query3_param4: String): Object2!

    query4(object3: Object3): Object2!

    query5: Object4!

    query6(query6_param1: String): String

    query7: Object7

    query8: Object8
}

type Object1 {
    o1_prop1: String!
    o1_prop2: Float!
    o1_prop3: Int!
    o1_prop4: Boolean!
    o1_array1: [Object2]!
    o1_object1: Object2
}

type Object2 {
    o2_prop1: String!
}

input Object3 {
    o3_prop1: String
    o3_prop2: [String]!
}

type Object4 {
   o4_prop1: String
   o4_prop2: String
}

type Object5 {
   o5_prop1: String
}

type Object7 {
  child: Object7
}

type Object8 {
  children: [Object8]
}