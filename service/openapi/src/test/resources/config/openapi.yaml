openapi: 3.0.2

info:
  title: DBeerpedia
  version: 3.0.0

paths:
  /breweries:
    get:
      x-dws-query: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brewery'
            application/hal+json:
              schema:
                type: object
                x-dws-envelope: true
                required:
                  - _embedded
                properties:
                  _embedded:
                    type: object
                    x-dws-envelope: true
                    required:
                      - breweries
                    properties:
                      breweries:
                        type: array
                        items:
                          $ref: '#/components/schemas/Brewery'

  /brewery/{identifier}:
    get:
      x-dws-query: brewery
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - name: expand
          x-dws-type: expand
          in: query
          required: false
          schema:
            type: string
            enum:
              - postalAddress
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brewery'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BreweryHAL'

  /brewery-old/{identifier}:
    get:
      x-dws-query: brewery-old
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        303:
          description: "303 response"
          headers:
            Location:
              schema:
                type: string
                x-dws-expr: '`${env.baseUrl}/brewery/${data.identifier}`'

  /brewery-old2/{identifier}:
    get:
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        303:
          description: "303 response"
          headers:
            Location:
              schema:
                type: string
                x-dws-expr: '`${env.baseUrl}/brewery/${args.identifier}`'

  /brewery-nulls/{identifier}:
    get:
      x-dws-query: brewery
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - name: expand
          x-dws-type: expand
          in: query
          required: false
          schema:
            type: string
            enum:
              - postalAddress
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreweryVisitAddressWithNullableLocation'

  /brewery-required-empty-nullable-envelope/{identifier}:
    get:
      x-dws-query: brewery
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - name: expand
          x-dws-type: expand
          in: query
          required: false
          schema:
            type: string
            enum:
              - postalAddress
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreweryRequiredEmptyNullableEnvelope'

  /breweries-pageable:
    get:
      x-dws-query: breweryPageableCollection
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: pageSize
          in: query
          schema:
            type: integer
            enum: [10, 20, 50]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brewery'
            application/hal+json:
              schema:
                type: object
                x-dws-envelope: true
                required:
                  - _embedded
                  - _links
                properties:
                  _embedded:
                    type: object
                    x-dws-envelope: true
                    required:
                      - breweries
                    properties:
                      breweries:
                        type: array
                        items:
                          $ref: '#/components/schemas/Brewery'
                  _links:
                    type: object
                    x-dws-envelope: true
                    required:
                      - self
                    properties:
                      self:
                        type: object
                        x-dws-envelope: true
                        properties:
                          href:
                            type: string
                            format: uri
                            x-dws-expr: env.baseUrl + args.requestPathAndQuery
                      next:
                        type: object
                        x-dws-envelope: true
                        required:
                          - href
                        properties:
                          href:
                            type: string
                            format: uri
                            x-dws-expr: "paging:next(data, args.pageSize, env.baseUrl, args.requestPathAndQuery)"
                      prev:
                        type: object
                        x-dws-envelope: true
                        required:
                          - href
                        properties:
                          href:
                            type: string
                            format: uri
                            x-dws-expr: "paging:prev(env.baseUrl, args.requestPathAndQuery)"
          headers:
            X-Pagination-Limit:
              schema:
                type: integer
                x-dws-expr: args.pageSize
            X-Pagination-Page:
              schema:
                type: integer
                x-dws-expr: args.page
            X-Forwarded-Host:
              schema:
                type: string
                x-dws-expr: '`${env.baseUrl}/forwarded-host`'
            X-Foo:
              schema:
                type: string
                default: bar
            X-Data-Foo:
              schema:
                type: string
                x-dws-expr: 'data.foo.bar'

  /breweries-pageable-with-params:
    get:
      x-dws-query:
        field: breweryPageableCollection
        paging:
          pageSize: args.pageSize
          page: args.page
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            enum: [10, 20, 50]
            default: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brewery'
            application/hal+json:
              schema:
                type: object
                x-dws-envelope: true
                required:
                  - _embedded
                  - _links
                properties:
                  _embedded:
                    type: object
                    x-dws-envelope: true
                    required:
                      - breweries
                    properties:
                      breweries:
                        type: array
                        items:
                          $ref: '#/components/schemas/Brewery'

  /breweries-all-of:
    get:
      x-dws-query:
        field: breweryCollection
      parameters:
        - name: expand
          in: query
          x-dws-type: expand
          schema:
            type: array
            items:
              type: string
              enum:
                - postalAddress
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreweryAllOf'
            application/hal+json:
              schema:
                type: object
                x-dws-envelope: true
                required:
                  - _embedded
                properties:
                  _embedded:
                    type: object
                    x-dws-envelope: true
                    required:
                      - breweries
                    properties:
                      breweries:
                        type: array
                        items:
                          $ref: '#/components/schemas/BreweryAllOf'

  /breweries-one-of:
    get:
      x-dws-query: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreweryOneOf'

  /breweries-any-of:
    get:
      x-dws-query: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreweryAnyOf'

  /breweries-object-mismatch:
    get:
      x-dws-query: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - identifier
                    - name
                  properties:
                    identifier:
                      type: string
                    name:
                      type: object
                      properties:
                        surname:
                          type: string

  /breweries-filter:
    get:
      x-dws-query:
        field: breweryCollection
        filters:
          name:
            like:
              x-dws-expr: args.like + '%'
          identifier:
            in: args.name
          employees:
            not:
              gt: args.empcount
      parameters:
        - name: name
          in: query
          schema:
            type: array
            items:
              type: string
        - name: like
          in: query
          schema:
            type: string
        - name: empcount
          in: query
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brewery'

  /breweries-maybe:
    get:
      x-dws-query: breweryCollectionMaybe
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                nullable: true
                items:
                  $ref: '#/components/schemas/Brewery'

  /breweries-string-nullability-exception:
    get:
      x-dws-query: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreweryStringNullabilityException'

  /breweries-object-nullability-exception:
    get:
      x-dws-query: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreweryObjectNullabilityException'

  /breweries-wrapped-object-nullability-exception:
    get:
      x-dws-query: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreweryWrappedObjectNullabilityException'

  /breweries-maybe-array-nullability-exception:
    get:
      x-dws-query: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreweryMaybeArrayNullabilityException'
  /brewery-invalid-expand:
    get:
      x-dws-query: brewery
      parameters:
        - name: expand
          x-dws-type: expand
          in: query
          schema:
            type: string
            enum:
              - identifier
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brewery'
  /brewery-included-fields/{identifier}:
    get:
      x-dws-query:
        field: brewery
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreweryIncludedFields'
  /breweries-included-fields:
    get:
      x-dws-query:
        field: breweryCollection
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
                x-dws-envelope: true
                required:
                  - _embedded
                properties:
                  _embedded:
                    type: object
                    x-dws-envelope: true
                    required:
                      - breweries
                    properties:
                      breweries:
                        type: array
                        items:
                          $ref: '#/components/schemas/BreweryIncludedFields'
  /breweries-pageable-included-fields:
    get:
      x-dws-query:
        field: breweryPageableCollection
        paging:
          pageSize: args.pageSize
          page: args.page
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            enum: [ 10, 20, 50 ]
            default: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreweryIncludedFields'
            application/hal+json:
              schema:
                type: object
                x-dws-envelope: true
                required:
                  - _embedded
                  - _links
                properties:
                  _embedded:
                    type: object
                    x-dws-envelope: true
                    required:
                      - breweries
                    properties:
                      breweries:
                        type: array
                        items:
                          $ref: '#/components/schemas/BreweryIncludedFields'
  /brewery-non-existent-included-field/{identifier}:
    get:
      x-dws-query:
        field: brewery
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreweryIncludedNonExistentFields'
  /brewery-non-scalar-included-field/{identifier}:
    get:
      x-dws-query:
        field: brewery
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreweryIncludedNonScalarFields'
  /brewery-non-string-included-field/{identifier}:
    get:
      x-dws-query:
        field: brewery
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreweryIncludedNonStringFields'

  /brewery-unsupported-header:
    get:
      x-dws-query:
        field: brewery
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brewery'
          headers:
            unsupported:
              schema:
                type: Array
                items:
                  type: String
  /brewery-header-no-results:
    get:
      x-dws-query:
        field: brewery
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brewery'
          headers:
            no-results:
              schema:
                type: String
                x-dws-expr: args.missing
  /brewery-header-that-does-nothing:
    get:
      x-dws-query:
        field: brewery
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brewery'
          headers:
            does-nothing:
              schema:
                type: String
  /breweries-pageable-with-params-selection-set:
    get:
      x-dws-query:
        field: breweryPageableCollection
        paging:
          pageSize: args.pageSize
          page: args.page
        selectionSet: |
          {
            nodes {
              identifier
              name
              aliases
              postalAddress {
                locator
                street
                postalCode
                location {
                  asGeoJSON
                }
              }
              visitAddresses {
                street
                postalCode
                location {
                  asGeoJSON
                }
              }
              numberOfEmployees
              salesAreas {
                asGeoJSON
              }
            }
          }
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            enum: [ 10, 20, 50 ]
            default: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
  /breweries-invalid-selection-set:
    get:
      x-dws-query:
        field: breweryCollection
        selectionSet: |
          type Brewery {
            id: String!
          }
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~

components:
  schemas:
    Brewery:
      type: object
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
        - visitAddresses
        - salesAreas
      properties:
        identifier:
          type: string
          nullable: false
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true
        salesAreas:
          type: array
          nullable: true
          items:
            type: object

    BreweryHAL:
      type: object
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
        - _embedded
      properties:
        identifier:
          type: string
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        _embedded:
          type: object
          x-dws-envelope: true
          required:
            - visitAddresses
          properties:
            postalAddress:
              $ref: '#/components/schemas/AddressNullable'
            visitAddresses:
              type: array
              items:
                $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true
        salesAreas:
          type: array
          nullable: true
          items:
            type: object
        _links:
          type: object
          x-dws-envelope: true
          required:
            - self
            - beers
          properties:
            self:
              type: object
              x-dws-envelope: true
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  x-dws-expr: '`${env.baseUrl}/breweries/${data.identifier}`'
            beers:
              type: object
              x-dws-envelope: true
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  x-dws-expr: '`${env.baseUrl}/breweries/${data.identifier}/beers`'

    BreweryIncludedFields:
      type: object
      x-dws-include:
        - hiddenField
        - secretField
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
        - visitAddresses
        - salesAreas
      properties:
        identifier:
          type: string
          nullable: false
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true
        salesAreas:
          type: array
          nullable: true
          items:
            type: object

    BreweryIncludedNonExistentFields:
      type: object
      x-dws-include:
        - hiddenField
        - missingField
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
        - visitAddresses
        - salesAreas
      properties:
        identifier:
          type: string
          nullable: false
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true
        salesAreas:
          type: array
          nullable: true
          items:
            type: object

    BreweryIncludedNonScalarFields:
      type: object
      x-dws-include:
        - hiddenField
        - postalAddress
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
        - visitAddresses
        - salesAreas
      properties:
        identifier:
          type: string
          nullable: false
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true
        salesAreas:
          type: array
          nullable: true
          items:
            type: object

    BreweryIncludedNonStringFields:
      type: object
      x-dws-include:
        - hiddenField
        - nonString:
            type: Object
            properties:
              foo
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
        - visitAddresses
        - salesAreas
      properties:
        identifier:
          type: string
          nullable: false
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true
        salesAreas:
          type: array
          nullable: true
          items:
            type: object

    BreweryVisitAddressWithNullableLocation:
      type: object
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
        - visitAddresses
      properties:
        identifier:
          type: string
          nullable: false
        name:
          type: string
        aliases:
          nullable: true
          type: array
          items:
            type: string
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressNullable'
        numberOfEmployees:
          type: integer
          nullable: true

    BreweryRequiredEmptyNullableEnvelope:
      type: object
      required:
        - identifier
        - name
        - aliasEnvelope
        - numberOfEmployees
        - visitAddresses
      properties:
        identifier:
          type: string
          nullable: false
        name:
          type: string
        aliasEnvelope:
          nullable: true
          type: Object
          properties:
            aliases:
              nullable: true
              type: array
              items:
                type: string
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressNullable'
        numberOfEmployees:
          type: integer
          nullable: true

    Address:
      type: object
      required:
        - street
        - location
      properties:
        street:
          type: string
        postalCode:
          type: string
        location:
          type: object

    AddressNullable:
      type: object
      nullable: true
      x-dws-include:
        - locator
      required:
        - street
        - location
      properties:
        street:
          type: string
        postalCode:
          type: string
        location:
          nullable: true
          type: object

    BreweryAllOf:
      type: object
      allOf:
        - type: object
          required:
            - identifier
            - name
          properties:
            identifier:
              type: string
        - $ref: '#/components/schemas/Nameable'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          required:
            - numberOfEmployees
            - salesAreas
          properties:
            numberOfEmployees:
              type: integer
              nullable: true
            salesAreas:
              type: array
              nullable: true
              items:
                type: object
    Nameable:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        aliases:
          type: array
          items:
            type: string

    Addressable:
      type: object
      properties:
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'

    AddressAllOf:
      type: object
      required:
        - street
      allOf:
        - $ref: '#/components/schemas/HasStreet'
        - type: object
          properties:
            postalCode:
              type: string
    HasStreet:
      type: object
      properties:
        street:
          type: string

    BreweryOneOf:
      type: object
      oneOf:
        - type: object
          required:
            - identifier
            - name
          properties:
            identifier:
              type: string
        - $ref: '#/components/schemas/Nameable'
        - $ref: '#/components/schemas/Addressable'

    BreweryAnyOf:
      type: object
      anyOf:
        - type: object
          required:
            - identifier
            - name
          properties:
            identifier:
              type: string
        - $ref: '#/components/schemas/Nameable'
        - $ref: '#/components/schemas/Addressable'

    BreweryStringNullabilityException:
      type: object
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
      properties:
        identifier:
          type: string
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        status:
          type: string
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true

    BreweryObjectNullabilityException:
      type: object
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
      properties:
        identifier:
          type: string
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        status:
          type: string
          nullable: true
        postalAddress:
          $ref: '#/components/schemas/Address'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true

    BreweryWrappedObjectNullabilityException:
      type: object
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
      properties:
        identifier:
          type: string
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        status:
          type: string
          nullable: true
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true
        beers:
          type: array
          items:
            $ref: '#/components/schemas/Beer'

    BreweryMaybeArrayNullabilityException:
      type: object
      required:
        - identifier
        - name
        - aliases
        - numberOfEmployees
      properties:
        identifier:
          type: string
        name:
          type: string
        aliases:
          type: array
          items:
            type: string
        status:
          type: string
          nullable: true
        postalAddress:
          $ref: '#/components/schemas/AddressNullable'
        visitAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        numberOfEmployees:
          type: integer
          nullable: true
        beersMaybe:
          type: array
          items:
            $ref: '#/components/schemas/Beer'

    Beer:
      type: object
      properties:
        identifier:
          type: string
